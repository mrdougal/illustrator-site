@import './variables';

.pure-img-responsive {
    max-width: 100%;
    height: auto;
}

#layout {
    position: relative;
    padding-left: 0;

    &.active {
        #menu {
            left: $menu-width;
            width: $menu-width;
        }

        .menu-link {
            left: $menu-width;
        }
    } 
}

#content {
    margin: 0;
    padding: $padding-layout;
    // padding-top: $padding-default*5;
    max-width: 800px;
    margin-bottom: $padding-layout;
    line-height: 1.6em;
}

#menu {
    margin-left: -$menu-width; /* "#menu" width */
    width: $menu-width;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    z-index: 1000; /* so the menu or its navicon stays above all content */
    // background: lighten($colour-main, 50%);
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;

    a {
        color: $colour-main;
        font-family: $font-heading;
        text-transform: uppercase;
        letter-spacing: $text-size/4;
        font-weight: bold;
        border: none;
        padding: $padding-default $padding-default*2;
        display: block;
        text-decoration: none;

        &:first-child {
            padding-top: $padding-default*2;
        }
        &:hover {
            color: $colour-hero;
        }
    }
    .pure-menu-selected {
        font-weight: bold;
    }
} 


/* -- Dynamic Button For Responsive Menu -------------------------------------*/

/*
The button to open/close the Menu is custom-made and not part of Pure. Here's
how it works:
*/

/*
`.menu-link` represents the responsive menu toggle that shows/hides on
small screens.
*/
.menu-link {
    position: fixed;
    display: block; /* show this only on small screens */
    top: 0;
    left: 0; /* "#menu width" */
    background: #000;
    background: rgba(0,0,0,0.7);
    font-size: 10px; /* change this value to increase/decrease button size */
    z-index: 10;
    width: 2em;
    height: auto;
    padding: 2.1em 1.6em;
}

    .menu-link:hover,
    .menu-link:focus {
        background: #000;
    }

    .menu-link span {
        position: relative;
        display: block;
    }

    .menu-link span,
    .menu-link span:before,
    .menu-link span:after {
        background-color: #fff;
        width: 100%;
        height: 0.2em;
    }

        .menu-link span:before,
        .menu-link span:after {
            position: absolute;
            margin-top: -0.6em;
            content: " ";
        }

        .menu-link span:after {
            margin-top: 0.6em;
        }


/* -- Responsive Styles (Media Queries) ------------------------------------- */

/*
Hides the menu at `48em`, but modify this based on your app's needs.
*/
@media (min-width: 48em) {

    #content {
        padding: $padding-default*4;
        // padding-right: $padding-default*2;
    }

    #layout {
        padding-left: $menu-width; /* left col width "#menu" */
        left: 0;
    }
    #menu {
        left: $menu-width;
        padding-top: $padding-default*2.5;
    }

    .menu-link {
        position: fixed;
        left: $menu-width;
        display: none;
    }

    #layout.active .menu-link {
        left: $menu-width;
    }
}

@media (max-width: 48em) {
    /* Only apply this when the window is small. Otherwise, the following
    case results in extra padding on the left:
        * Make the window small.
        * Tap the menu to trigger the active state.
        * Make the window large again.
    */
    #layout.active {
        position: relative;
        left: $menu-width;
    }

    #menu {
        background-color: $colour-main;
        a {
            color: $colour-alt;
        }
    }
}

